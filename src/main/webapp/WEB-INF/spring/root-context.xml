<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
		<property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>

		<property name="jdbcUrl" value="jdbc:mariadb://127.0.0.1:3306/itnangproject_db"></property>
		<property name="username" value="itnangproject_user"></property>
		<property name="password" value="itnangproject_pass"></property>
	</bean>

	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<constructor-arg ref="hikariConfig"></constructor-arg>
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- Spring MVC 설정 -->
	<mvc:annotation-driven>
		<!-- Jackson JSON 메시지 컨버터 추가 -->
		<mvc:message-converters>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
		</mvc:message-converters>
		
	</mvc:annotation-driven>
	
	<!-- 첨부파일 설정 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="maxUploadSize" value="10485760" /> <!-- byte size -->
      <property name="defaultEncoding" value="utf-8" />
   </bean>
	
	
	<!-- BOARD START -->	<!-- 호출하는 아이디(mySQL ID젠) -->
   <!--  <bean name="egovBoardIdGnrService" class="egovframework.rte.fdl.idgnr.impl.EgovTableIdGnrServiceImpl" destroy-method="destroy">
    	<property name="dataSource" ref="egov.dataSource"/>
       	<property name="strategy"   ref="boardStrategy"/>	밑에 스트레티지랑 이름이 같아야 한다
       	<property name="blockSize"  value="10"/>
       	<property name="table" 	    value="IDS"/>		데이터베이스 pk값 관리하는 테이블 이름
       	<property name="tableName"  value="BOARD_ID"/>
    </bean>
       
    <bean name="boardStrategy" class="egovframework.rte.fdl.idgnr.impl.strategy.EgovIdGnrStrategyImpl">
       	<property name="prefix"    value="BOARD_"/>		검색할때 앞에 고정적으로 붙겠다
       	<property name="cipers"    value="14"/>			CHAR(10)에서 prefix 만큼 값을 뺀 값 5자리, 피케값을 제외한 남은 자리는 0으로 채운다 
       	<property name="fillChar"  value="0"/>
    </bean> -->
    <!-- BOARD END -->
	
</beans>
